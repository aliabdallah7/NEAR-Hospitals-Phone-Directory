{"version":3,"sources":["components/login/header.js","components/login/description.js","lib/near.js","components/login/login-button.js","components/login/login.js","components/main/registerModal.js","components/main/navbar.js","components/main/hospital-card.js","components/main/hospitals-list.js","components/main/hospitals.js","components/main/main.js","App.js","reportWebVitals.js","index.js","components/login/login.module.css","components/main/navbar.module.css","components/main/hospitals.module.css"],"names":["Header","Description","CONTRACT_ID","gas","BN","getWallet","a","connect","networkId","keyStore","keyStores","BrowserLocalStorageKeyStore","nodeUrl","walletUrl","near","wallet","WalletConnection","getHospitalsData","account","functionCall","contractId","methodName","response","registerHospital","hospital","args","LoginButton","props","useState","setWallet","setAccountId","setLoading","useEffect","tempWallet","getAccountId","console","log","login","requestSignIn","Container","className","Button","variant","size","onClick","Login","classes","fondo","setIsLoggedIn","RegisterModal","nameRef","useRef","phoneRef","emailRef","numberRef","websiteRef","locationRef","accountId","registerHospitalHandler","name","current","value","phone","email","numberEmployees","website","location","res","reload","Modal","show","onHide","handleClose","Dialog","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","ref","Footer","NavBar","showModal","setShowModal","searchRef","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","FormControl","myNavbar","aria-label","setHospitalName","signOut","localStorage","removeItem","e","HospitalCard","Card","border","style","width","creatorId","Text","HospitalsList","Row","hospitals","map","hospitalCard","Hospital","loading","hospitalsData","setHospitalsData","result","SuccessValue","status","contractResponse","atob","split","jsonData","JSON","parse","hospitalName","forEach","Main","App","isLoggedIn","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e29103f5.chunk.js","sourcesContent":["function Header() {\r\n  return <h1>Hospital phone directory</h1>;\r\n}\r\n\r\nexport default Header;\r\n","function Description() {\r\n  return (\r\n    <p>\r\n      Here's a phone directory where you will find contact data of many hospitals\r\n      <br />\r\n      You will find the name of the hospital, their phone number, a contact\r\n      email, their location, etc.\r\n      <br />\r\n      <br />\r\n      Also you can register your own hospital if you are a CEO of a one, so other users can find you\r\n      easily.\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Description;\r\n","import { keyStores, connect, WalletConnection, utils } from \"near-api-js\";\r\nimport BN from \"bn.js\";\r\n\r\nexport const CONTRACT_ID = \"dev-1634742185963-52355839606274\";\r\nexport const gas = new BN(\"70000000000000\");\r\n\r\nexport const getWallet = async () => {\r\n  const near = await connect({\r\n    networkId: \"testnet\",\r\n    keyStore: new keyStores.BrowserLocalStorageKeyStore(),\r\n    nodeUrl: \"https://rpc.testnet.near.org\",\r\n    walletUrl: \"https://wallet.testnet.near.org\",\r\n  });\r\n  const wallet = new WalletConnection(near, \"miguelislas\");\r\n  return wallet;\r\n};\r\n\r\nexport const getHospitalsData = async (wallet) => {\r\n  const response = await wallet.account().functionCall({\r\n    contractId: CONTRACT_ID,\r\n    methodName: \"getHospitalsData\",\r\n    gas,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const registerHospital = async (wallet, hospital) => {\r\n  const response = await wallet.account().functionCall({\r\n    contractId: CONTRACT_ID,\r\n    methodName: \"registerHospital\",\r\n    args: hospital,\r\n    gas,\r\n  });\r\n  return response;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Login from \"./login\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport { getWallet, gethospitalsData, CONTRACT_ID } from \"../../lib/near\";\r\n\r\nfunction LoginButton(props) {\r\n  const [wallet, setWallet] = useState();\r\n  const [accountId, setAccountId] = useState(\"\");\r\n  const [infoMessage, setInfoMessage] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const tempWallet = await getWallet();\r\n        setWallet(tempWallet);\r\n        setAccountId(tempWallet.getAccountId());\r\n        setLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const login = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await wallet.requestSignIn(CONTRACT_ID, \"hospitals phone directory\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setLoading(false);\r\n    // eslint-disable-next-line no-restricted-globals\r\n    //location.reload();\r\n  };\r\n\r\n  return (\r\n    <Container className=\"\">\r\n      <Button\r\n        variant=\"success\"\r\n        className=\"m-4\"\r\n        size=\"md\"\r\n        onClick={() => login()}\r\n      >\r\n        Log in\r\n      </Button>\r\n      <span>Log in to start viewing hospitals's data</span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginButton;\r\n","import Header from \"./header\";\r\nimport Description from \"./description\";\r\nimport LoginButton from \"./login-button\";\r\n\r\nimport classes from \"./login.module.css\";\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <div className={classes.fondo}>\r\n      <Header />\r\n      <Description />\r\n      <LoginButton setIsLoggedIn={props.setIsLoggedIn} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { getWallet, registerHospital } from \"../../lib/near\";\r\n\r\nfunction RegisterModal(props) {\r\n  const nameRef = useRef();\r\n  const phoneRef = useRef();\r\n  const emailRef = useRef();\r\n  const numberRef = useRef();\r\n  const websiteRef = useRef();\r\n  const locationRef = useRef();\r\n\r\n  const [wallet, setWallet] = useState();\r\n  const [accountId, setAccountId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const tempWallet = await getWallet();\r\n        console.log(tempWallet);\r\n        setWallet(tempWallet);\r\n        setAccountId(tempWallet.getAccountId());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const registerHospitalHandler = async () => {\r\n    const hospital = {\r\n      name: nameRef.current.value,\r\n      phone: phoneRef.current.value,\r\n      email: emailRef.current.value,\r\n      numberEmployees: numberRef.current.value,\r\n      website: websiteRef.current.value,\r\n      location: locationRef.current.value,\r\n    };\r\n\r\n    console.log(hospital);\r\n\r\n    try {\r\n      console.log(\"Por llamar\");\r\n      const res = await registerHospital(wallet, hospital);\r\n      console.log(res);\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload();\r\n    } catch (e) {\r\n      console.log(\"error\");\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n      <Modal.Dialog>\r\n        <Modal.Header>\r\n          <Modal.Title>Register hospital</Modal.Title>\r\n        </Modal.Header>\r\n        {console.log(accountId)}\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Hospital's name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name of the hospital\"\r\n                ref={nameRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Hospital's phone:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"phone of the hospital\"\r\n                ref={phoneRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Hospital's email:</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"email of the hospital\"\r\n                ref={emailRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Number of employees:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"How many employees are working here?\"\r\n                ref={numberRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Hospital's website:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"website of the hospital\"\r\n                ref={websiteRef}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Hospital's location:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Location of the hospital\"\r\n                ref={locationRef}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => registerHospitalHandler()}>\r\n            Register hospital\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default RegisterModal;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport { getWallet } from \"../../lib/near\";\r\nimport RegisterModal from \"./registerModal\";\r\n\r\nimport classes from \"./navbar.module.css\";\r\n\r\nfunction NavBar(props) {\r\n  const [wallet, setWallet] = useState();\r\n  const [accountId, setAccountId] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const searchRef = useRef();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const tempWallet = await getWallet();\r\n        setWallet(tempWallet);\r\n        setAccountId(tempWallet.getAccountId());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const signOut = () => {\r\n    try {\r\n      wallet.signOut();\r\n      localStorage.removeItem(\r\n        \"near-api-js:keystore:miguelislas.testnet:testnet\"\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#\">Companies phone directory</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Form className=\"d-flex justify-content-between\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className={classes.myNavbar}\r\n              aria-label=\"Search\"\r\n              ref={searchRef}\r\n            />\r\n            <Button\r\n              variant=\"outline-info\"\r\n              onClick={() => props.setHospitalName(searchRef.current.value)}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Form>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button variant=\"success\" onClick={() => setShowModal(true)}>\r\n              Register hospital\r\n            </Button>\r\n            <Button variant=\"danger\" className=\"m-2\" onClick={signOut}>\r\n              Log out\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <RegisterModal show={showModal} handleClose={() => setShowModal(false)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import Card from \"react-bootstrap/Card\";\r\n\r\nfunction HospitalCard(props) {\r\n  return (\r\n    <Card border=\"secondary\" style={{ width: \"18rem\" }}>\r\n      <Card.Header>{props.name}</Card.Header>\r\n      <Card.Body>\r\n        <Card.Title>{props.creatorId}</Card.Title>\r\n        <Card.Text>\r\n          <p>Location: {props.location}</p>\r\n          <p>Phone: {props.phone}</p>\r\n          <p>Number employees: {props.numberEmployees}</p>\r\n          <p>email: {props.email}</p>\r\n          <p>website: {props.website}</p>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default HospitalCard;\r\n","import Row from \"react-bootstrap/Row\";\r\n\r\nimport HospitalCard from \"./hospital-card\";\r\n\r\nimport classes from \"./hospitals.module.css\";\r\n\r\nfunction HospitalsList(props) {\r\n  return (\r\n    <Row className=\"d-flex justify-content-around\">\r\n      {props.hospitals.map((hospital) => {\r\n        return (\r\n          <HospitalCard\r\n            className={classes.hospitalCard}\r\n            name={hospital.name}\r\n            creatorId={hospital.creatorId}\r\n            phone={hospital.phone}\r\n            email={hospital.email}\r\n            numberEmployees={hospital.numberEmployees}\r\n            location={hospital.location}\r\n            website={hospital.website}\r\n          />\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default HospitalsList;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport { getHospitalsData, getWallet } from \"../../lib/near\";\r\nimport HospitalsList from \"./hospitals-list\";\r\n\r\nfunction Hospital(props) {\r\n  const [wallet, setWallet] = useState();\r\n  const [accountId, setAccountId] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [hospitalsData, setHospitalsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const tempWallet = await getWallet();\r\n        console.log(tempWallet);\r\n        setWallet(tempWallet);\r\n        setAccountId(tempWallet.getAccountId());\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    (async () => {\r\n      try {\r\n        const result = await getHospitalsData(wallet);\r\n        const {\r\n          status: { SuccessValue },\r\n        } = result;\r\n        const contractResponse = atob(SuccessValue).split(\"\\\\n\");\r\n        const jsonData = JSON.parse(contractResponse);\r\n        console.log(props.hospitalName);\r\n        if (props.hospitalName) {\r\n          jsonData.forEach((hospital) => {\r\n            if (hospital.name === props.hospitalName) {\r\n              setHospitalsData([hospital]);\r\n              setLoading(false);\r\n            }\r\n          });\r\n        } else {\r\n          setHospitalsData(jsonData);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n  }, [wallet, props.hospitalName]);\r\n\r\n  return (\r\n    <Container className=\"m-4\">\r\n      {console.log(accountId)}\r\n      {loading ? (\r\n        <p>loading...</p>\r\n      ) : (\r\n        <HospitalsList hospitals={hospitalsData} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Hospital;\r\n","import { useState } from \"react\";\r\n\r\nimport NavBar from \"./navbar\";\r\n\r\nimport Hospitals from \"./hospitals\";\r\n\r\nfunction Main() {\r\n  const [hospitalName, setHospitalName] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <NavBar setHospitalName={setHospitalName} />\r\n      <Hospitals hospitalName={hospitalName} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import \"./App.css\";\r\n\r\nimport Login from \"./components/login/login\";\r\nimport Main from \"./components/main/main\";\r\n\r\nfunction App() {\r\n  const isLoggedIn = localStorage.getItem(\r\n    \"near-api-js:keystore:miguelislas.testnet:testnet\"\r\n  );\r\n  return <div className=\"App\">{isLoggedIn ? <Main /> : <Login />}</div>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fondo\":\"login_fondo__3iQQs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myNavbar\":\"navbar_myNavbar__DQbsJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hospitalCard\":\"hospitals_hospitalCard__2uU8l\"};"],"sourceRoot":""}